package main
import sg "lib:sokol/gfx"
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i src/z_shader_core.glsl -o src/generated_shader.odin -l glsl430 -f sokol_odin

    Overview:
    =========
    Shader program: 'quad':
        Get shader desc: quad_shader_desc(sg.query_backend())
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_quad_position => 0
            ATTR_quad_color0 => 1
            ATTR_quad_uv0 => 2
            ATTR_quad_local_uv0 => 3
            ATTR_quad_size0 => 4
            ATTR_quad_bytes0 => 5
            ATTR_quad_color_override0 => 6
            ATTR_quad_params0 => 7
    Bindings:
        Uniform block 'Shader_Data':
            Odin struct: Shader_Data
            Bind slot: UB_Shader_Data => 0
        Image 'tex0':
            Image type: ._2D
            Sample type: .FLOAT
            Multisampled: false
            Bind slot: IMG_tex0 => 0
        Image 'font_tex':
            Image type: ._2D
            Sample type: .FLOAT
            Multisampled: false
            Bind slot: IMG_font_tex => 1
        Sampler 'default_sampler':
            Type: .FILTERING
            Bind slot: SMP_default_sampler => 0
*/
ATTR_quad_position :: 0
ATTR_quad_color0 :: 1
ATTR_quad_uv0 :: 2
ATTR_quad_local_uv0 :: 3
ATTR_quad_size0 :: 4
ATTR_quad_bytes0 :: 5
ATTR_quad_color_override0 :: 6
ATTR_quad_params0 :: 7
UB_Shader_Data :: 0
IMG_tex0 :: 0
IMG_font_tex :: 1
SMP_default_sampler :: 0
Shader_Data :: struct #align(16) {
    using _: struct #packed {
        ndc_to_world_xform: Matrix4,
        bg_repeat_tex0_atlas_uv: Vec4,
    },
}
/*
    #version 430

    layout(location = 0) in vec2 position;
    layout(location = 0) out vec4 color;
    layout(location = 1) in vec4 color0;
    layout(location = 1) out vec2 uv;
    layout(location = 2) in vec2 uv0;
    layout(location = 2) out vec2 local_uv;
    layout(location = 3) in vec2 local_uv0;
    layout(location = 4) out vec4 bytes;
    layout(location = 5) in vec4 bytes0;
    layout(location = 5) out vec4 color_override;
    layout(location = 6) in vec4 color_override0;
    layout(location = 3) out vec2 size;
    layout(location = 4) in vec2 size0;
    layout(location = 6) out vec4 params;
    layout(location = 7) in vec4 params0;
    layout(location = 7) out vec2 pos;

    void main()
    {
        gl_Position = vec4(position, 0.0, 1.0);
        color = color0;
        uv = uv0;
        local_uv = local_uv0;
        bytes = bytes0;
        color_override = color_override0;
        size = size0;
        params = params0;
        pos = gl_Position.xy;
    }

*/
@(private="file")
vs_source_glsl430 := [871]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,
    0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,
    0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,
    0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,
    0x20,0x62,0x79,0x74,0x65,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x20,0x62,0x79,0x74,0x65,0x73,0x30,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x5f,0x6f,0x76,0x65,0x72,0x72,0x69,0x64,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x36,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x6f,0x76,
    0x65,0x72,0x72,0x69,0x64,0x65,0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x73,0x69,0x7a,0x65,0x30,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x36,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x37,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x73,0x30,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x37,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x75,0x76,0x30,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x20,0x3d,0x20,0x6c,0x6f,0x63,0x61,
    0x6c,0x5f,0x75,0x76,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x79,0x74,0x65,0x73,
    0x20,0x3d,0x20,0x62,0x79,0x74,0x65,0x73,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x6f,0x76,0x65,0x72,0x72,0x69,0x64,0x65,0x20,0x3d,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x6f,0x76,0x65,0x72,0x72,0x69,0x64,0x65,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x69,0x7a,0x65,0x20,0x3d,0x20,0x73,0x69,0x7a,0x65,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3d,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,
    0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,
    0x79,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
/*
    #version 430

    uniform vec4 Shader_Data[5];
    layout(binding = 16) uniform sampler2D tex0_default_sampler;
    layout(binding = 17) uniform sampler2D font_tex_default_sampler;

    layout(location = 4) in vec4 bytes;
    layout(location = 7) in vec2 pos;
    layout(location = 1) in vec2 uv;
    layout(location = 0) out vec4 col_out;
    layout(location = 0) in vec4 color;
    layout(location = 5) in vec4 color_override;
    layout(location = 2) in vec2 local_uv;
    layout(location = 3) in vec2 size;
    layout(location = 6) in vec4 params;

    bool has_flag(int flags, int flag)
    {
        return (flags & flag) != 0;
    }

    vec2 local_uv_to_atlas_uv(vec2 local_uv_1, vec4 atlas_uv)
    {
        vec2 _32 = fract(local_uv_1);
        vec2 wrapped_local_uv = _32;
        float _40;
        if (_32.x < 9.9999997473787516355514526367188e-05)
        {
            _40 = 9.9999997473787516355514526367188e-05;
        }
        else
        {
            _40 = wrapped_local_uv.x;
        }
        float _51;
        if (wrapped_local_uv.y < 9.9999997473787516355514526367188e-05)
        {
            _51 = 9.9999997473787516355514526367188e-05;
        }
        else
        {
            _51 = wrapped_local_uv.y;
        }
        wrapped_local_uv = vec2(_40, _51);
        float _63;
        if (_40 > 0.99989998340606689453125)
        {
            _63 = 0.99989998340606689453125;
        }
        else
        {
            _63 = wrapped_local_uv.x;
        }
        float _73;
        if (wrapped_local_uv.y > 0.99989998340606689453125)
        {
            _73 = 0.99989998340606689453125;
        }
        else
        {
            _73 = wrapped_local_uv.y;
        }
        vec2 _80 = vec2(_63, _73);
        wrapped_local_uv = _80;
        return atlas_uv.xy + ((atlas_uv.zw - atlas_uv.xy) * _80);
    }

    void main()
    {
        int _104 = int(bytes.x * 255.0);
        vec4 tex_col = vec4(1.0);
        if (_104 == 0)
        {
            tex_col = texture(tex0_default_sampler, uv);
        }
        else
        {
            if (_104 == 1)
            {
                vec4 _224 = tex_col;
                _224.w = texture(font_tex_default_sampler, uv).x;
                tex_col = _224;
            }
        }
        col_out = tex_col;
        int param = int(bytes.z * 255.0);
        int param_1 = 1;
        if (has_flag(param, param_1))
        {
            vec2 param_2 = (mat4(Shader_Data[0], Shader_Data[1], Shader_Data[2], Shader_Data[3]) * vec4(pos, 0.0, 1.0)).xy * vec2(0.0078125);
            vec4 param_3 = Shader_Data[4];
            vec4 _191 = texture(tex0_default_sampler, local_uv_to_atlas_uv(param_2, param_3));
            col_out.x = _191.x;
            col_out.y = _191.y;
            col_out.z = _191.z;
        }
        col_out *= color;
        vec4 _206 = col_out;
        vec3 _214 = mix(_206.xyz, color_override.xyz, vec3(color_override.w));
        col_out.x = _214.x;
        col_out.y = _214.y;
        col_out.z = _214.z;
    }

*/
@(private="file")
fs_source_glsl430 := [2633]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x53,0x68,0x61,0x64,0x65,
    0x72,0x5f,0x44,0x61,0x74,0x61,0x5b,0x35,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x36,0x29,0x20,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,
    0x44,0x20,0x74,0x65,0x78,0x30,0x5f,0x64,0x65,0x66,0x61,0x75,0x6c,0x74,0x5f,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,
    0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x37,0x29,0x20,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x66,
    0x6f,0x6e,0x74,0x5f,0x74,0x65,0x78,0x5f,0x64,0x65,0x66,0x61,0x75,0x6c,0x74,0x5f,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x62,0x79,0x74,0x65,0x73,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x37,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,
    0x6f,0x6c,0x5f,0x6f,0x75,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x35,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x6f,
    0x76,0x65,0x72,0x72,0x69,0x64,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x73,0x69,0x7a,
    0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x36,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x62,0x6f,0x6f,0x6c,0x20,0x68,0x61,
    0x73,0x5f,0x66,0x6c,0x61,0x67,0x28,0x69,0x6e,0x74,0x20,0x66,0x6c,0x61,0x67,0x73,
    0x2c,0x20,0x69,0x6e,0x74,0x20,0x66,0x6c,0x61,0x67,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x66,0x6c,0x61,0x67,0x73,0x20,
    0x26,0x20,0x66,0x6c,0x61,0x67,0x29,0x20,0x21,0x3d,0x20,0x30,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x76,0x65,0x63,0x32,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x5f,0x74,
    0x6f,0x5f,0x61,0x74,0x6c,0x61,0x73,0x5f,0x75,0x76,0x28,0x76,0x65,0x63,0x32,0x20,
    0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x5f,0x31,0x2c,0x20,0x76,0x65,0x63,0x34,
    0x20,0x61,0x74,0x6c,0x61,0x73,0x5f,0x75,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x32,0x20,0x3d,0x20,0x66,0x72,0x61,0x63,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x5f,0x31,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x77,0x72,0x61,0x70,0x70,0x65,0x64,0x5f,
    0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x20,0x3d,0x20,0x5f,0x33,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x32,0x2e,0x78,0x20,0x3c,0x20,0x39,
    0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,
    0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,
    0x65,0x2d,0x30,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,
    0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,
    0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x34,
    0x30,0x20,0x3d,0x20,0x77,0x72,0x61,0x70,0x70,0x65,0x64,0x5f,0x6c,0x6f,0x63,0x61,
    0x6c,0x5f,0x75,0x76,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x77,0x72,0x61,0x70,0x70,0x65,0x64,0x5f,0x6c,0x6f,0x63,
    0x61,0x6c,0x5f,0x75,0x76,0x2e,0x79,0x20,0x3c,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,
    0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,
    0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x35,0x31,0x20,0x3d,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,
    0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,
    0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x35,0x31,0x20,0x3d,0x20,0x77,
    0x72,0x61,0x70,0x70,0x65,0x64,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x2e,
    0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x77,0x72,0x61,
    0x70,0x70,0x65,0x64,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x32,0x28,0x5f,0x34,0x30,0x2c,0x20,0x5f,0x35,0x31,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x30,0x20,0x3e,0x20,0x30,0x2e,0x39,
    0x39,0x39,0x38,0x39,0x39,0x39,0x38,0x33,0x34,0x30,0x36,0x30,0x36,0x36,0x38,0x39,
    0x34,0x35,0x33,0x31,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x30,0x2e,0x39,0x39,
    0x39,0x38,0x39,0x39,0x39,0x38,0x33,0x34,0x30,0x36,0x30,0x36,0x36,0x38,0x39,0x34,
    0x35,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x36,0x33,0x20,0x3d,0x20,0x77,0x72,0x61,0x70,0x70,0x65,
    0x64,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,
    0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x77,0x72,0x61,0x70,0x70,
    0x65,0x64,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x2e,0x79,0x20,0x3e,0x20,
    0x30,0x2e,0x39,0x39,0x39,0x38,0x39,0x39,0x39,0x38,0x33,0x34,0x30,0x36,0x30,0x36,
    0x36,0x38,0x39,0x34,0x35,0x33,0x31,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x30,
    0x2e,0x39,0x39,0x39,0x38,0x39,0x39,0x39,0x38,0x33,0x34,0x30,0x36,0x30,0x36,0x36,
    0x38,0x39,0x34,0x35,0x33,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x33,0x20,0x3d,0x20,0x77,0x72,0x61,
    0x70,0x70,0x65,0x64,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x38,0x30,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x36,0x33,0x2c,0x20,
    0x5f,0x37,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x77,0x72,0x61,0x70,0x70,0x65,
    0x64,0x5f,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x20,0x3d,0x20,0x5f,0x38,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x61,0x74,0x6c,
    0x61,0x73,0x5f,0x75,0x76,0x2e,0x78,0x79,0x20,0x2b,0x20,0x28,0x28,0x61,0x74,0x6c,
    0x61,0x73,0x5f,0x75,0x76,0x2e,0x7a,0x77,0x20,0x2d,0x20,0x61,0x74,0x6c,0x61,0x73,
    0x5f,0x75,0x76,0x2e,0x78,0x79,0x29,0x20,0x2a,0x20,0x5f,0x38,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x30,0x34,0x20,0x3d,0x20,
    0x69,0x6e,0x74,0x28,0x62,0x79,0x74,0x65,0x73,0x2e,0x78,0x20,0x2a,0x20,0x32,0x35,
    0x35,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x74,
    0x65,0x78,0x5f,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x30,0x34,
    0x20,0x3d,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,0x30,0x5f,0x64,0x65,0x66,0x61,
    0x75,0x6c,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x75,0x76,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x31,0x30,0x34,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x32,0x34,0x20,0x3d,0x20,
    0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x32,0x32,0x34,0x2e,0x77,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x66,0x6f,0x6e,0x74,0x5f,0x74,0x65,0x78,0x5f,0x64,
    0x65,0x66,0x61,0x75,0x6c,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,
    0x75,0x76,0x29,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x5f,0x32,0x32,
    0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x62,0x79,
    0x74,0x65,0x73,0x2e,0x7a,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,
    0x3d,0x20,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x68,0x61,0x73,
    0x5f,0x66,0x6c,0x61,0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x20,0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x53,0x68,0x61,0x64,0x65,0x72,
    0x5f,0x44,0x61,0x74,0x61,0x5b,0x30,0x5d,0x2c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,
    0x5f,0x44,0x61,0x74,0x61,0x5b,0x31,0x5d,0x2c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,
    0x5f,0x44,0x61,0x74,0x61,0x5b,0x32,0x5d,0x2c,0x20,0x53,0x68,0x61,0x64,0x65,0x72,
    0x5f,0x44,0x61,0x74,0x61,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x70,0x6f,0x73,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x20,0x2a,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x30,0x37,
    0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x53,0x68,
    0x61,0x64,0x65,0x72,0x5f,0x44,0x61,0x74,0x61,0x5b,0x34,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x39,0x31,0x20,
    0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,0x30,0x5f,0x64,
    0x65,0x66,0x61,0x75,0x6c,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,
    0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x75,0x76,0x5f,0x74,0x6f,0x5f,0x61,0x74,0x6c,0x61,
    0x73,0x5f,0x75,0x76,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x31,0x39,
    0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,
    0x5f,0x6f,0x75,0x74,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x31,0x39,0x31,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,
    0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x31,0x39,0x31,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,0x20,0x2a,
    0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x32,0x30,0x36,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x31,0x34,0x20,
    0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x32,0x30,0x36,0x2e,0x78,0x79,0x7a,0x2c,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x6f,0x76,0x65,0x72,0x72,0x69,0x64,0x65,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x6f,
    0x76,0x65,0x72,0x72,0x69,0x64,0x65,0x2e,0x77,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x31,
    0x34,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,
    0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x31,0x34,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x5f,0x6f,0x75,0x74,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x31,
    0x34,0x2e,0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
quad_shader_desc :: proc (backend: sg.Backend) -> sg.Shader_Desc {
    desc: sg.Shader_Desc
    desc.label = "quad_shader"
    #partial switch backend {
    case .GLCORE:
        desc.vertex_func.source = transmute(cstring)&vs_source_glsl430
        desc.vertex_func.entry = "main"
        desc.fragment_func.source = transmute(cstring)&fs_source_glsl430
        desc.fragment_func.entry = "main"
        desc.attrs[0].base_type = .FLOAT
        desc.attrs[0].glsl_name = "position"
        desc.attrs[1].base_type = .FLOAT
        desc.attrs[1].glsl_name = "color0"
        desc.attrs[2].base_type = .FLOAT
        desc.attrs[2].glsl_name = "uv0"
        desc.attrs[3].base_type = .FLOAT
        desc.attrs[3].glsl_name = "local_uv0"
        desc.attrs[4].base_type = .FLOAT
        desc.attrs[4].glsl_name = "size0"
        desc.attrs[5].base_type = .FLOAT
        desc.attrs[5].glsl_name = "bytes0"
        desc.attrs[6].base_type = .FLOAT
        desc.attrs[6].glsl_name = "color_override0"
        desc.attrs[7].base_type = .FLOAT
        desc.attrs[7].glsl_name = "params0"
        desc.uniform_blocks[0].stage = .FRAGMENT
        desc.uniform_blocks[0].layout = .STD140
        desc.uniform_blocks[0].size = 80
        desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT4
        desc.uniform_blocks[0].glsl_uniforms[0].array_count = 5
        desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "Shader_Data"
        desc.images[0].stage = .FRAGMENT
        desc.images[0].multisampled = false
        desc.images[0].image_type = ._2D
        desc.images[0].sample_type = .FLOAT
        desc.images[1].stage = .FRAGMENT
        desc.images[1].multisampled = false
        desc.images[1].image_type = ._2D
        desc.images[1].sample_type = .FLOAT
        desc.samplers[0].stage = .FRAGMENT
        desc.samplers[0].sampler_type = .FILTERING
        desc.image_sampler_pairs[0].stage = .FRAGMENT
        desc.image_sampler_pairs[0].image_slot = 0
        desc.image_sampler_pairs[0].sampler_slot = 0
        desc.image_sampler_pairs[0].glsl_name = "tex0_default_sampler"
        desc.image_sampler_pairs[1].stage = .FRAGMENT
        desc.image_sampler_pairs[1].image_slot = 1
        desc.image_sampler_pairs[1].sampler_slot = 0
        desc.image_sampler_pairs[1].glsl_name = "font_tex_default_sampler"
    }
    return desc
}
